// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: feedback.sql

package sqlc

import (
	"context"
)

const countRecentFeedbacksOneMonth = `-- name: CountRecentFeedbacksOneMonth :one
SELECT COUNT(*) AS feedback_count
FROM feedback
WHERE created_at >= (CURRENT_DATE - INTERVAL '30 days')
`

func (q *Queries) CountRecentFeedbacksOneMonth(ctx context.Context) (int64, error) {
	row := q.db.QueryRow(ctx, countRecentFeedbacksOneMonth)
	var feedback_count int64
	err := row.Scan(&feedback_count)
	return feedback_count, err
}

const createFeedback = `-- name: CreateFeedback :exec
INSERT INTO feedback (type, content)
VALUES ($1, $2)
`

type CreateFeedbackParams struct {
	Type    string
	Content string
}

func (q *Queries) CreateFeedback(ctx context.Context, arg CreateFeedbackParams) error {
	_, err := q.db.Exec(ctx, createFeedback, arg.Type, arg.Content)
	return err
}
