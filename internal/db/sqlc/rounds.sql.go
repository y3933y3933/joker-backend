// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: rounds.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createRound = `-- name: CreateRound :one
INSERT INTO rounds (
  game_id, question_id, answer, question_player_id,
  answer_player_id, is_joker, status, deck
)
VALUES (
  $1, $2, $3, $4, $5, $6, $7, $8
)
RETURNING id, game_id, question_id, answer, question_player_id,
          answer_player_id, is_joker, status, created_at, deck
`

type CreateRoundParams struct {
	GameID           int64
	QuestionID       pgtype.Int8
	Answer           pgtype.Text
	QuestionPlayerID int64
	AnswerPlayerID   int64
	IsJoker          pgtype.Bool
	Status           string
	Deck             []string
}

func (q *Queries) CreateRound(ctx context.Context, arg CreateRoundParams) (Round, error) {
	row := q.db.QueryRow(ctx, createRound,
		arg.GameID,
		arg.QuestionID,
		arg.Answer,
		arg.QuestionPlayerID,
		arg.AnswerPlayerID,
		arg.IsJoker,
		arg.Status,
		arg.Deck,
	)
	var i Round
	err := row.Scan(
		&i.ID,
		&i.GameID,
		&i.QuestionID,
		&i.Answer,
		&i.QuestionPlayerID,
		&i.AnswerPlayerID,
		&i.IsJoker,
		&i.Status,
		&i.CreatedAt,
		&i.Deck,
	)
	return i, err
}
